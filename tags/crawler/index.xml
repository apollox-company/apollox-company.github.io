<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>crawler on 𝐀𝐩𝐨𝐥𝐥𝐨𝐗 | 量化交易</title>
    <link>https://apollox-company.github.io/tags/crawler/</link>
    <description>Recent content in crawler on 𝐀𝐩𝐨𝐥𝐥𝐨𝐗 | 量化交易</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 05 Jan 2022 11:07:10 +0600</lastBuildDate><atom:link href="https://apollox-company.github.io/tags/crawler/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>打造數據資料庫</title>
      <link>https://apollox-company.github.io/blog/database/</link>
      <pubDate>Wed, 05 Jan 2022 11:07:10 +0600</pubDate>
      
      <guid>https://apollox-company.github.io/blog/database/</guid>
      <description>前言  學會網站爬蟲後接下來就是要將time series的data整理並儲存至database，如此一來就可以進行更高階的數據分析，甚至可以拿來給machine learning做學習，讓AI根據歷史資料來做預測! 而最後會講解如何提高爬蟲的速度，原本預計要爬10分鐘的data可以提升至1分鐘爬完，是不是很神奇啊~
 目錄  認識資料庫</description>
    </item>
    
    <item>
      <title>Python網頁爬蟲實戰</title>
      <link>https://apollox-company.github.io/blog/crawler/</link>
      <pubDate>Tue, 04 Jan 2022 11:07:10 +0600</pubDate>
      
      <guid>https://apollox-company.github.io/blog/crawler/</guid>
      <description>前言  這個章節來到Python的最強功能&amp;ndash;網頁爬蟲，這也是數據分析最重要的前菜，大家想想看，要進行數據分析前最重要的是什麼?
當然就是要有數據，而數據的來源通常就是網路上公開的資料，但有些網站沒有提供下載的按鍵，這時候就要解析網頁結構去爬取我們想要的數據，最後將爬蟲寫成每日自動爬取，如此一來就可以進行數據分析的部分囉~
 目錄  爬蟲技巧SOP 證交所爬蟲 公開資訊觀測站爬蟲 鉅亨網爬蟲 tradingview爬蟲 CMoney爬蟲 即時報價爬蟲</description>
    </item>
    
  </channel>
</rss>
